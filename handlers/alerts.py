import logging
from telegram import Update
from telegram.ext import ContextTypes
from utils.price_utils import get_price
from models import get_asset_name



logger = logging.getLogger(__name__)

async def handle_set_alert(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ú–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    query = update.callback_query
    await query.answer()
    symbol = query.data.split('_')[1]
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    current_price = get_price(symbol)
    if current_price == 0.0:
        await query.message.reply_text(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –¥–ª—è {get_asset_name(symbol)}")
        return
        
    context.user_data['alert_symbol'] = symbol
    context.bot_data[f"last_price_{symbol}"] = current_price
    
    await query.message.reply_text(
        f"–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ {get_asset_name(symbol)}:\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: 2.5 (–∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞ 2.5%)"
    )

async def set_alert(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞"""
    try:
        symbol = context.user_data.get('alert_symbol')
        if not symbol:
            await update.message.reply_text("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            return
            
        threshold = float(update.message.text)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π
        if threshold <= 0:
            await update.message.reply_text("‚ùå –ü—Ä–æ—Ü–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
            return
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        context.job_queue.run_repeating(
            price_check_callback,
            interval=60,  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
            first=10,     # –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
            chat_id=update.effective_chat.id,
            data={'symbol': symbol, 'threshold': threshold},
            name=f'{update.effective_chat.id}_{symbol}'
        )
        
        await update.message.reply_text(
            f"üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è {get_asset_name(symbol)} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {threshold}%"
        )
        
        # –û—á–∏—â–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª
        context.user_data.pop('alert_symbol', None)
        
    except ValueError:
        await update.message.reply_text("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2.5)")

async def price_check_callback(context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã"""
    job = context.job
    symbol = job.data['symbol']
    threshold = job.data['threshold']
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
    current_price = get_price(symbol)
    
    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
    if current_price == 0.0:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –¥–ª—è {symbol} –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ü–µ–Ω—É
    last_price = context.bot_data.get(f"last_price_{symbol}", current_price)
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
    change = (current_price - last_price) / last_price * 100
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏ –ø–æ—Ä–æ–≥
    if abs(change) >= threshold:
        direction = "‚ÜóÔ∏è –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞" if change > 0 else "‚ÜòÔ∏è —É–ø–∞–ª–∞ –Ω–∞"
        await context.bot.send_message(
            chat_id=job.chat_id,
            text=f"üö® {get_asset_name(symbol)} {direction} {abs(change):.2f}%!\n"
                 f"–¶–µ–Ω–∞: ${current_price:.2f} (–±—ã–ª–æ: ${last_price:.2f})"
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ü–µ–Ω—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        context.bot_data[f"last_price_{symbol}"] = current_price
    
    # –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—É
    else:
        context.bot_data[f"last_price_{symbol}"] = current_price